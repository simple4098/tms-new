<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yql.framework.schedule.dao.ITaskEntityDao">
    <resultMap id="taskDtoResultMap" type="com.yql.framework.schedule.dto.TaskInfoDto">
        <result property="id" column="id"/>
        <result column="task_name" property="name"/>
        <result column="cron_expression" property="cron"/>
        <result column="prev_fire_time" property="preExecTime"/>
        <result column="next_fire_time" property="nextExecTime"/>
        <result column="author" property="author"/>
        <result column="status" property="status"/>
        <result column="task_type" property="type"/>
        <result column="uri" property="uri"/>
        <result column="app" property="app"/>
        <result column="task_description" property="description"/>
    </resultMap>

    <select id="findList" resultMap="taskDtoResultMap" parameterType="com.yql.framework.schedule.support.Pagination">
       SELECT t.id,t.task_name,t.cron_expression,t.author,t.task_type,qt.prev_fire_time,qt.next_fire_time,
        qt.TRIGGER_STATE AS status,t.uri,t.task_description,t.app
        FROM task_info t  LEFT JOIN QRTZ_TRIGGERS qt ON t.id = qt.JOB_NAME
   </select>
    <insert id="insert" parameterType="com.yql.framework.schedule.domain.TaskInfo">
        INSERT INTO task_info (id,task_name,cron_expression,task_description,author,task_type,uri,app,date_created,last_updated,version,deleted)
        VALUES (#{id},#{name},#{cron},#{description},#{author},#{type},#{uri},#{app},now(),now(),0,#{deleted})
    </insert>
    <select id="load" parameterType="java.lang.String" resultMap="taskDtoResultMap">
        SELECT t.*,qt.TRIGGER_STATE AS status FROM  task_info t  LEFT JOIN QRTZ_TRIGGERS qt ON t.id = qt.JOB_NAME WHERE t.id=#{id}
    </select>
    <delete id="delete" parameterType="java.lang.String">
        delete from task_info where id=#{id}
    </delete>
    <update id="update" parameterType="com.yql.framework.schedule.domain.TaskInfo">
        update task_info set
        task_name = #{name},
        task_description=#{description},
        author=#{author},
        task_type=#{type},
        uri=#{uri},
        app=#{app},
        cron_expression=#{cron}
        where id=#{id}
    </update>
</mapper>
